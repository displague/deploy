## WordPress single blog (FastCGI cache enabled) directives.
# Designed to be included in any server {} directive block.

add_header X-Cache-Status $upstream_cache_status;

## Nginx Cache, designed to be used with fastcgi_cache.conf and proxy_cache.conf
# http://rtcamp.com/wordpress-nginx/tutorials/single-site/fastcgi-cache-with-purging/
# fastcgi_cache start
set $skip_cache 0;

# POST requests and urls with a query string should always go to PHP
if ($request_method != GET) {
	set $skip_cache 1;
}

if ($query_string != "") {
	set $skip_cache 1;
}   

# Skip cache for logged in users or recent commenters
if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
	set $skip_cache 1;
}

# Skip cache for uris containing the following segments
if ($request_uri ~* "(memcache.php|apc.php|/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|upgrade.php|update-core.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
	set $skip_cache 1;
}

# Skip cache on WooCommerce pages
if ($request_uri ~* "/store.*|/cart.*|/my-account.*|/checkout.*|/addons.*") {
	set $skip_cache 1;
}

# Skip cache for WooCommerce query string
if ( $arg_add-to-cart != "" ) { 
	set $skip_cache 1;
}

# Skip cache when WooCommerce cart is not empty
if ( $cookie_woocommerce_items_in_cart != "0" ) {	
	set $skip_cache 1;
}

# DO NOT CACHE Search Engine Googlebot crawler
if ($http_user_agent ~ "Googlebot") {
        set $skip_cache 1;
}

# Yahoo
if ($http_user_agent ~ "Yahoo!") {
        set $skip_cache 1;
}

# Bing
if ($http_user_agent ~ "bingbot") {
        set $skip_cache 1;
}

# MSN
if ($http_user_agent ~ "MSNBot") {
        set $skip_cache 1;
}

# Yandex
if ($http_user_agent ~ "YandexBot") {
        set $skip_cache 1;
}

# Baidu
if ($http_user_agent ~ "Baiduspider") {
        set $skip_cache 1;
}

# Alexa
if ($http_user_agent ~ "Alexabot") {
        set $skip_cache 1;
}

# Ahrefs
if ($http_user_agent ~ "AhrefsBot") {
        set $skip_cache 1;
}

### Purging FastCGI cache.
location ~ /purge(/.*) {
	#access_log		off;
	deny			all;
	allow			127.0.0.1;
	#allow			$server_name; # server ip
	fastcgi_cache_purge	FCGICACHE "$scheme$request_method$host$1";
	return			301 $scheme://$server_name;
}

# Uncomment one of the lines below for the appropriate caching plugin (if used).
# move this seting to per-site basis .ngaccess file (like .htaccess :D)
#include /etc/nginx/config.vhost/wordpress_wp-super-cache.conf;
#include /etc/nginx/config.vhost/wordpress_w3-total-cache.conf;

## End FastCGI cache settings.

# Add a trailing slash to /wp-admin
location /wp-admin {
        rewrite ^/wp-admin$ /wp-admin/ redirect;
}

## Basic directives with proxy cache settings.
# This order might seem weird - this is attempted to match last if rules below fail.
# http://wiki.nginx.org/HttpCoreModule
location / {
	try_files $uri $uri/ /index.php?$args;
	
	# Uncomment to enable Nginx proxy cache.
	#include /etc/nginx/conf.vhost/proxy_cache.conf;
}

