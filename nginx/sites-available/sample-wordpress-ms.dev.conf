## Wordpress Multisite Mapping for Nginx (Requires Nginx Helper plugin).
map $http_host $blogid {
	default	0;
#	include	$root_path/wp-content/plugins/nginx-helper/map.conf;
}

server {
	listen   80; ## listen for ipv4; this line is default and implied

	# Make site accessible from world wide
	server_name www.sample-wordpress-ms.dev;

	set $root_path '/home/masedi/Webs/sample-wordpress-ms.dev';
	root $root_path;
	index index.php index.html index.htm;

	# Log
	access_log   /var/log/nginx/sample-wordpress-ms.dev_access.log;
	error_log    /var/log/nginx/sample-wordpress-ms.dev_error.log;

	# Global directives configuration.
	include /etc/nginx/conf.vhost/block.conf;
	include /etc/nginx/conf.vhost/staticfiles.conf;
	include /etc/nginx/conf.vhost/restrictions.conf;
	
	# Custom Nginx directives
	#include $root_path/.ngxaccess;

	# Default vhost directives configuration, use only one config.
	#include /etc/nginx/conf.vhost/site_wordpress-ms.conf;
	include /etc/nginx/conf.vhost/site_wordpress-ms_cached.conf;

	## Default WordPress Multisite (MS) directives.
	# The default site directive for '/' location has been pre-defined in the Default vhost directive config file.

	# Pass all .php files onto a php-fpm/php-fcgi server.
	location ~ \.php$ {
		try_files $uri =404;
		
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		#NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
		
		fastcgi_index index.php;
		fastcgi_pass unix:/var/run/php5-fpm.masedi.sock;
		
		# Include FastCGI Params.
		include /etc/nginx/fastcgi_params;
		
		# Overwrite FastCGI Params here.
		fastcgi_param SCRIPT_FILENAME	$document_root$fastcgi_script_name;
		fastcgi_param SCRIPT_NAME	$fastcgi_script_name;
		
		# Include FastCGI Configs.
		include /etc/nginx/conf.vhost/fastcgi.conf;

		# Uncomment to Enable PHP FastCGI cache.
		include /etc/nginx/conf.vhost/fastcgi_cache.conf;
	}

	## Uncomment to enable error page directives configuration.
	#include /etc/nginx/conf.vhost/errorpage.conf;

	## Add your custom site directives here.
}

## Legacy www
## Redirect naked non-www access to www
## Uncomment lines below if you use legacy www
#server {
#        listen          80;
#        server_name     sample-wordpress-ms.dev;
#        return          301 http://www.$server_name$request_uri;
#}
